// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/weights.proto

#include "protos/weights.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR WeightVector::WeightVector(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.weights_)*/ {},
      /* _impl_._weights_cached_byte_size_ = */ {0},
      /*decltype(_impl_.bias_)*/ 0,
    } {}
struct WeightVectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightVectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightVectorDefaultTypeInternal() {}
  union {
    WeightVector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightVectorDefaultTypeInternal _WeightVector_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Weights::Weights(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.earlypiecesquares_)*/ {},
      /* _impl_._earlypiecesquares_cached_byte_size_ = */ {0},
      /*decltype(_impl_.latepiecesquares_)*/ {},
      /* _impl_._latepiecesquares_cached_byte_size_ = */ {0},
      /*decltype(_impl_.early_)*/ nullptr,
      /*decltype(_impl_.late_)*/ nullptr,
      /*decltype(_impl_.clipped_)*/ nullptr,
    } {}
struct WeightsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightsDefaultTypeInternal() {}
  union {
    Weights _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightsDefaultTypeInternal _Weights_default_instance_;
static ::_pb::Metadata file_level_metadata_protos_2fweights_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fweights_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fweights_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fweights_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::WeightVector, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::WeightVector, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::WeightVector, _impl_.bias_),
    PROTOBUF_FIELD_OFFSET(::WeightVector, _impl_.weights_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Weights, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_.early_),
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_.late_),
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_.clipped_),
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_.earlypiecesquares_),
    PROTOBUF_FIELD_OFFSET(::Weights, _impl_.latepiecesquares_),
    0,
    1,
    2,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::WeightVector)},
        {12, 25, -1, sizeof(::Weights)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_WeightVector_default_instance_._instance,
    &::_Weights_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fweights_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\024protos/weights.proto\";\n\014WeightVector\022\021"
    "\n\004bias\030\001 \001(\005H\000\210\001\001\022\017\n\007weights\030\002 \003(\005B\007\n\005_b"
    "ias\"\307\001\n\007Weights\022!\n\005early\030\001 \001(\0132\r.WeightV"
    "ectorH\000\210\001\001\022 \n\004late\030\002 \001(\0132\r.WeightVectorH"
    "\001\210\001\001\022#\n\007clipped\030\003 \001(\0132\r.WeightVectorH\002\210\001"
    "\001\022\031\n\021earlyPieceSquares\030\004 \003(\005\022\030\n\020latePiec"
    "eSquares\030\005 \003(\005B\010\n\006_earlyB\007\n\005_lateB\n\n\010_cl"
    "ippedb\006proto3"
};
static ::absl::once_flag descriptor_table_protos_2fweights_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fweights_2eproto = {
    false,
    false,
    293,
    descriptor_table_protodef_protos_2fweights_2eproto,
    "protos/weights.proto",
    &descriptor_table_protos_2fweights_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protos_2fweights_2eproto::offsets,
    file_level_metadata_protos_2fweights_2eproto,
    file_level_enum_descriptors_protos_2fweights_2eproto,
    file_level_service_descriptors_protos_2fweights_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fweights_2eproto_getter() {
  return &descriptor_table_protos_2fweights_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fweights_2eproto(&descriptor_table_protos_2fweights_2eproto);
// ===================================================================

class WeightVector::_Internal {
 public:
  using HasBits = decltype(std::declval<WeightVector>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WeightVector, _impl_._has_bits_);
  static void set_has_bias(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WeightVector::WeightVector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WeightVector)
}
WeightVector::WeightVector(const WeightVector& from) : ::google::protobuf::Message() {
  WeightVector* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.weights_){from._impl_.weights_},
      /* _impl_._weights_cached_byte_size_ = */ {0},
      decltype(_impl_.bias_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.bias_ = from._impl_.bias_;

  // @@protoc_insertion_point(copy_constructor:WeightVector)
}
inline void WeightVector::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.weights_){arena},
      /* _impl_._weights_cached_byte_size_ = */ {0},
      decltype(_impl_.bias_){0},
  };
}
WeightVector::~WeightVector() {
  // @@protoc_insertion_point(destructor:WeightVector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WeightVector::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.weights_.~RepeatedField();
}
void WeightVector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WeightVector::Clear() {
// @@protoc_insertion_point(message_clear_start:WeightVector)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_weights()->Clear();
  _impl_.bias_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WeightVector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> WeightVector::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WeightVector, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WeightVector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 weights = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WeightVector, _impl_.weights_)}},
    // optional int32 bias = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeightVector, _impl_.bias_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WeightVector, _impl_.bias_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bias = 1;
    {PROTOBUF_FIELD_OFFSET(WeightVector, _impl_.bias_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 weights = 2;
    {PROTOBUF_FIELD_OFFSET(WeightVector, _impl_.weights_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WeightVector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WeightVector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bias = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bias(), target);
  }

  // repeated int32 weights = 2;
  {
    int byte_size = _impl_._weights_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(2, _internal_weights(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WeightVector)
  return target;
}

::size_t WeightVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WeightVector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 weights = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_weights())
    ;
    _impl_._weights_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 bias = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bias());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WeightVector::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WeightVector::MergeImpl
};
const ::google::protobuf::Message::ClassData*WeightVector::GetClassData() const { return &_class_data_; }


void WeightVector::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WeightVector*>(&to_msg);
  auto& from = static_cast<const WeightVector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WeightVector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_weights()->MergeFrom(from._internal_weights());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_bias(from._internal_bias());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeightVector::CopyFrom(const WeightVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WeightVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WeightVector::IsInitialized() const {
  return true;
}

void WeightVector::InternalSwap(WeightVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.weights_.InternalSwap(&other->_impl_.weights_);
        swap(_impl_.bias_, other->_impl_.bias_);
}

::google::protobuf::Metadata WeightVector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fweights_2eproto_getter, &descriptor_table_protos_2fweights_2eproto_once,
      file_level_metadata_protos_2fweights_2eproto[0]);
}
// ===================================================================

class Weights::_Internal {
 public:
  using HasBits = decltype(std::declval<Weights>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Weights, _impl_._has_bits_);
  static const ::WeightVector& early(const Weights* msg);
  static void set_has_early(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::WeightVector& late(const Weights* msg);
  static void set_has_late(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::WeightVector& clipped(const Weights* msg);
  static void set_has_clipped(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::WeightVector& Weights::_Internal::early(const Weights* msg) {
  return *msg->_impl_.early_;
}
const ::WeightVector& Weights::_Internal::late(const Weights* msg) {
  return *msg->_impl_.late_;
}
const ::WeightVector& Weights::_Internal::clipped(const Weights* msg) {
  return *msg->_impl_.clipped_;
}
Weights::Weights(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Weights)
}
Weights::Weights(const Weights& from) : ::google::protobuf::Message() {
  Weights* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.earlypiecesquares_){from._impl_.earlypiecesquares_},
      /* _impl_._earlypiecesquares_cached_byte_size_ = */ {0},
      decltype(_impl_.latepiecesquares_){from._impl_.latepiecesquares_},
      /* _impl_._latepiecesquares_cached_byte_size_ = */ {0},
      decltype(_impl_.early_){nullptr},
      decltype(_impl_.late_){nullptr},
      decltype(_impl_.clipped_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.early_ = new ::WeightVector(*from._impl_.early_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.late_ = new ::WeightVector(*from._impl_.late_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.clipped_ = new ::WeightVector(*from._impl_.clipped_);
  }

  // @@protoc_insertion_point(copy_constructor:Weights)
}
inline void Weights::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.earlypiecesquares_){arena},
      /* _impl_._earlypiecesquares_cached_byte_size_ = */ {0},
      decltype(_impl_.latepiecesquares_){arena},
      /* _impl_._latepiecesquares_cached_byte_size_ = */ {0},
      decltype(_impl_.early_){nullptr},
      decltype(_impl_.late_){nullptr},
      decltype(_impl_.clipped_){nullptr},
  };
}
Weights::~Weights() {
  // @@protoc_insertion_point(destructor:Weights)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Weights::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.earlypiecesquares_.~RepeatedField();
  _impl_.latepiecesquares_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.early_;
  if (this != internal_default_instance()) delete _impl_.late_;
  if (this != internal_default_instance()) delete _impl_.clipped_;
}
void Weights::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Weights::Clear() {
// @@protoc_insertion_point(message_clear_start:Weights)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_earlypiecesquares()->Clear();
  _internal_mutable_latepiecesquares()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.early_ != nullptr);
      _impl_.early_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.late_ != nullptr);
      _impl_.late_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.clipped_ != nullptr);
      _impl_.clipped_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Weights::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2> Weights::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Weights, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Weights_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .WeightVector early = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Weights, _impl_.early_)}},
    // optional .WeightVector late = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Weights, _impl_.late_)}},
    // optional .WeightVector clipped = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Weights, _impl_.clipped_)}},
    // repeated int32 earlyPieceSquares = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Weights, _impl_.earlypiecesquares_)}},
    // repeated int32 latePieceSquares = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Weights, _impl_.latepiecesquares_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .WeightVector early = 1;
    {PROTOBUF_FIELD_OFFSET(Weights, _impl_.early_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .WeightVector late = 2;
    {PROTOBUF_FIELD_OFFSET(Weights, _impl_.late_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .WeightVector clipped = 3;
    {PROTOBUF_FIELD_OFFSET(Weights, _impl_.clipped_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 earlyPieceSquares = 4;
    {PROTOBUF_FIELD_OFFSET(Weights, _impl_.earlypiecesquares_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 latePieceSquares = 5;
    {PROTOBUF_FIELD_OFFSET(Weights, _impl_.latepiecesquares_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::WeightVector>()},
    {::_pbi::TcParser::GetTable<::WeightVector>()},
    {::_pbi::TcParser::GetTable<::WeightVector>()},
  }}, {{
  }},
};

::uint8_t* Weights::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Weights)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .WeightVector early = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::early(this),
        _Internal::early(this).GetCachedSize(), target, stream);
  }

  // optional .WeightVector late = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::late(this),
        _Internal::late(this).GetCachedSize(), target, stream);
  }

  // optional .WeightVector clipped = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::clipped(this),
        _Internal::clipped(this).GetCachedSize(), target, stream);
  }

  // repeated int32 earlyPieceSquares = 4;
  {
    int byte_size = _impl_._earlypiecesquares_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(4, _internal_earlypiecesquares(),
                                                 byte_size, target);
    }
  }

  // repeated int32 latePieceSquares = 5;
  {
    int byte_size = _impl_._latepiecesquares_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(5, _internal_latepiecesquares(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Weights)
  return target;
}

::size_t Weights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Weights)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 earlyPieceSquares = 4;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_earlypiecesquares())
    ;
    _impl_._earlypiecesquares_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 latePieceSquares = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_latepiecesquares())
    ;
    _impl_._latepiecesquares_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .WeightVector early = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.early_);
    }

    // optional .WeightVector late = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.late_);
    }

    // optional .WeightVector clipped = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.clipped_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Weights::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Weights::MergeImpl
};
const ::google::protobuf::Message::ClassData*Weights::GetClassData() const { return &_class_data_; }


void Weights::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Weights*>(&to_msg);
  auto& from = static_cast<const Weights&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Weights)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_earlypiecesquares()->MergeFrom(from._internal_earlypiecesquares());
  _this->_internal_mutable_latepiecesquares()->MergeFrom(from._internal_latepiecesquares());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_early()->::WeightVector::MergeFrom(
          from._internal_early());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_late()->::WeightVector::MergeFrom(
          from._internal_late());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_clipped()->::WeightVector::MergeFrom(
          from._internal_clipped());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Weights::CopyFrom(const Weights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Weights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Weights::IsInitialized() const {
  return true;
}

void Weights::InternalSwap(Weights* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.earlypiecesquares_.InternalSwap(&other->_impl_.earlypiecesquares_);
  _impl_.latepiecesquares_.InternalSwap(&other->_impl_.latepiecesquares_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Weights, _impl_.clipped_)
      + sizeof(Weights::_impl_.clipped_)
      - PROTOBUF_FIELD_OFFSET(Weights, _impl_.early_)>(
          reinterpret_cast<char*>(&_impl_.early_),
          reinterpret_cast<char*>(&other->_impl_.early_));
}

::google::protobuf::Metadata Weights::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fweights_2eproto_getter, &descriptor_table_protos_2fweights_2eproto_once,
      file_level_metadata_protos_2fweights_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
