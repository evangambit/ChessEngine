// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/weights.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fweights_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fweights_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fweights_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fweights_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protos_2fweights_2eproto;
class WeightVector;
struct WeightVectorDefaultTypeInternal;
extern WeightVectorDefaultTypeInternal _WeightVector_default_instance_;
class Weights;
struct WeightsDefaultTypeInternal;
extern WeightsDefaultTypeInternal _Weights_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class WeightVector final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WeightVector) */ {
 public:
  inline WeightVector() : WeightVector(nullptr) {}
  ~WeightVector() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WeightVector(::google::protobuf::internal::ConstantInitialized);

  WeightVector(const WeightVector& from);
  WeightVector(WeightVector&& from) noexcept
    : WeightVector() {
    *this = ::std::move(from);
  }

  inline WeightVector& operator=(const WeightVector& from) {
    CopyFrom(from);
    return *this;
  }
  inline WeightVector& operator=(WeightVector&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WeightVector& default_instance() {
    return *internal_default_instance();
  }
  static inline const WeightVector* internal_default_instance() {
    return reinterpret_cast<const WeightVector*>(
               &_WeightVector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WeightVector& a, WeightVector& b) {
    a.Swap(&b);
  }
  inline void Swap(WeightVector* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WeightVector* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WeightVector* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WeightVector>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WeightVector& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WeightVector& from) {
    WeightVector::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WeightVector* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "WeightVector";
  }
  protected:
  explicit WeightVector(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeightsFieldNumber = 2,
    kBiasFieldNumber = 1,
  };
  // repeated int32 weights = 2;
  int weights_size() const;
  private:
  int _internal_weights_size() const;

  public:
  void clear_weights() ;
  ::int32_t weights(int index) const;
  void set_weights(int index, ::int32_t value);
  void add_weights(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& weights() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_weights();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_weights() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_weights();

  public:
  // optional int32 bias = 1;
  bool has_bias() const;
  void clear_bias() ;
  ::int32_t bias() const;
  void set_bias(::int32_t value);

  private:
  ::int32_t _internal_bias() const;
  void _internal_set_bias(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:WeightVector)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> weights_;
    mutable ::google::protobuf::internal::CachedSize _weights_cached_byte_size_;
    ::int32_t bias_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fweights_2eproto;
};// -------------------------------------------------------------------

class Weights final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Weights) */ {
 public:
  inline Weights() : Weights(nullptr) {}
  ~Weights() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Weights(::google::protobuf::internal::ConstantInitialized);

  Weights(const Weights& from);
  Weights(Weights&& from) noexcept
    : Weights() {
    *this = ::std::move(from);
  }

  inline Weights& operator=(const Weights& from) {
    CopyFrom(from);
    return *this;
  }
  inline Weights& operator=(Weights&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Weights& default_instance() {
    return *internal_default_instance();
  }
  static inline const Weights* internal_default_instance() {
    return reinterpret_cast<const Weights*>(
               &_Weights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Weights& a, Weights& b) {
    a.Swap(&b);
  }
  inline void Swap(Weights* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Weights* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Weights* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Weights>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Weights& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Weights& from) {
    Weights::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Weights* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Weights";
  }
  protected:
  explicit Weights(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEarlyPieceSquaresFieldNumber = 4,
    kLatePieceSquaresFieldNumber = 5,
    kEarlyFieldNumber = 1,
    kLateFieldNumber = 2,
    kClippedFieldNumber = 3,
  };
  // repeated int32 earlyPieceSquares = 4;
  int earlypiecesquares_size() const;
  private:
  int _internal_earlypiecesquares_size() const;

  public:
  void clear_earlypiecesquares() ;
  ::int32_t earlypiecesquares(int index) const;
  void set_earlypiecesquares(int index, ::int32_t value);
  void add_earlypiecesquares(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& earlypiecesquares() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_earlypiecesquares();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_earlypiecesquares() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_earlypiecesquares();

  public:
  // repeated int32 latePieceSquares = 5;
  int latepiecesquares_size() const;
  private:
  int _internal_latepiecesquares_size() const;

  public:
  void clear_latepiecesquares() ;
  ::int32_t latepiecesquares(int index) const;
  void set_latepiecesquares(int index, ::int32_t value);
  void add_latepiecesquares(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& latepiecesquares() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_latepiecesquares();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_latepiecesquares() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_latepiecesquares();

  public:
  // optional .WeightVector early = 1;
  bool has_early() const;
  void clear_early() ;
  const ::WeightVector& early() const;
  PROTOBUF_NODISCARD ::WeightVector* release_early();
  ::WeightVector* mutable_early();
  void set_allocated_early(::WeightVector* value);
  void unsafe_arena_set_allocated_early(::WeightVector* value);
  ::WeightVector* unsafe_arena_release_early();

  private:
  const ::WeightVector& _internal_early() const;
  ::WeightVector* _internal_mutable_early();

  public:
  // optional .WeightVector late = 2;
  bool has_late() const;
  void clear_late() ;
  const ::WeightVector& late() const;
  PROTOBUF_NODISCARD ::WeightVector* release_late();
  ::WeightVector* mutable_late();
  void set_allocated_late(::WeightVector* value);
  void unsafe_arena_set_allocated_late(::WeightVector* value);
  ::WeightVector* unsafe_arena_release_late();

  private:
  const ::WeightVector& _internal_late() const;
  ::WeightVector* _internal_mutable_late();

  public:
  // optional .WeightVector clipped = 3;
  bool has_clipped() const;
  void clear_clipped() ;
  const ::WeightVector& clipped() const;
  PROTOBUF_NODISCARD ::WeightVector* release_clipped();
  ::WeightVector* mutable_clipped();
  void set_allocated_clipped(::WeightVector* value);
  void unsafe_arena_set_allocated_clipped(::WeightVector* value);
  ::WeightVector* unsafe_arena_release_clipped();

  private:
  const ::WeightVector& _internal_clipped() const;
  ::WeightVector* _internal_mutable_clipped();

  public:
  // @@protoc_insertion_point(class_scope:Weights)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> earlypiecesquares_;
    mutable ::google::protobuf::internal::CachedSize _earlypiecesquares_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> latepiecesquares_;
    mutable ::google::protobuf::internal::CachedSize _latepiecesquares_cached_byte_size_;
    ::WeightVector* early_;
    ::WeightVector* late_;
    ::WeightVector* clipped_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fweights_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// WeightVector

// optional int32 bias = 1;
inline bool WeightVector::has_bias() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WeightVector::clear_bias() {
  _impl_.bias_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t WeightVector::bias() const {
  // @@protoc_insertion_point(field_get:WeightVector.bias)
  return _internal_bias();
}
inline void WeightVector::set_bias(::int32_t value) {
  _internal_set_bias(value);
  // @@protoc_insertion_point(field_set:WeightVector.bias)
}
inline ::int32_t WeightVector::_internal_bias() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bias_;
}
inline void WeightVector::_internal_set_bias(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bias_ = value;
}

// repeated int32 weights = 2;
inline int WeightVector::_internal_weights_size() const {
  return _internal_weights().size();
}
inline int WeightVector::weights_size() const {
  return _internal_weights_size();
}
inline void WeightVector::clear_weights() {
  _internal_mutable_weights()->Clear();
}
inline ::int32_t WeightVector::weights(int index) const {
  // @@protoc_insertion_point(field_get:WeightVector.weights)
  return _internal_weights().Get(index);
}
inline void WeightVector::set_weights(int index, ::int32_t value) {
  _internal_mutable_weights()->Set(index, value);
  // @@protoc_insertion_point(field_set:WeightVector.weights)
}
inline void WeightVector::add_weights(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_weights()->Add(value);
  // @@protoc_insertion_point(field_add:WeightVector.weights)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& WeightVector::weights() const {
  // @@protoc_insertion_point(field_list:WeightVector.weights)
  return _internal_weights();
}
inline ::google::protobuf::RepeatedField<::int32_t>* WeightVector::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:WeightVector.weights)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_weights();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& WeightVector::_internal_weights() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.weights_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* WeightVector::_internal_mutable_weights() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.weights_;
}

// -------------------------------------------------------------------

// Weights

// optional .WeightVector early = 1;
inline bool Weights::has_early() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.early_ != nullptr);
  return value;
}
inline void Weights::clear_early() {
  if (_impl_.early_ != nullptr) _impl_.early_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::WeightVector& Weights::_internal_early() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::WeightVector* p = _impl_.early_;
  return p != nullptr ? *p : reinterpret_cast<const ::WeightVector&>(::_WeightVector_default_instance_);
}
inline const ::WeightVector& Weights::early() const {
  // @@protoc_insertion_point(field_get:Weights.early)
  return _internal_early();
}
inline void Weights::unsafe_arena_set_allocated_early(::WeightVector* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.early_);
  }
  _impl_.early_ = reinterpret_cast<::WeightVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Weights.early)
}
inline ::WeightVector* Weights::release_early() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::WeightVector* released = _impl_.early_;
  _impl_.early_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::WeightVector* Weights::unsafe_arena_release_early() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Weights.early)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::WeightVector* temp = _impl_.early_;
  _impl_.early_ = nullptr;
  return temp;
}
inline ::WeightVector* Weights::_internal_mutable_early() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.early_ == nullptr) {
    auto* p = CreateMaybeMessage<::WeightVector>(GetArenaForAllocation());
    _impl_.early_ = reinterpret_cast<::WeightVector*>(p);
  }
  return _impl_.early_;
}
inline ::WeightVector* Weights::mutable_early() {
  ::WeightVector* _msg = _internal_mutable_early();
  // @@protoc_insertion_point(field_mutable:Weights.early)
  return _msg;
}
inline void Weights::set_allocated_early(::WeightVector* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::WeightVector*>(_impl_.early_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::WeightVector*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.early_ = reinterpret_cast<::WeightVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:Weights.early)
}

// optional .WeightVector late = 2;
inline bool Weights::has_late() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.late_ != nullptr);
  return value;
}
inline void Weights::clear_late() {
  if (_impl_.late_ != nullptr) _impl_.late_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::WeightVector& Weights::_internal_late() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::WeightVector* p = _impl_.late_;
  return p != nullptr ? *p : reinterpret_cast<const ::WeightVector&>(::_WeightVector_default_instance_);
}
inline const ::WeightVector& Weights::late() const {
  // @@protoc_insertion_point(field_get:Weights.late)
  return _internal_late();
}
inline void Weights::unsafe_arena_set_allocated_late(::WeightVector* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.late_);
  }
  _impl_.late_ = reinterpret_cast<::WeightVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Weights.late)
}
inline ::WeightVector* Weights::release_late() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::WeightVector* released = _impl_.late_;
  _impl_.late_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::WeightVector* Weights::unsafe_arena_release_late() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Weights.late)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::WeightVector* temp = _impl_.late_;
  _impl_.late_ = nullptr;
  return temp;
}
inline ::WeightVector* Weights::_internal_mutable_late() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.late_ == nullptr) {
    auto* p = CreateMaybeMessage<::WeightVector>(GetArenaForAllocation());
    _impl_.late_ = reinterpret_cast<::WeightVector*>(p);
  }
  return _impl_.late_;
}
inline ::WeightVector* Weights::mutable_late() {
  ::WeightVector* _msg = _internal_mutable_late();
  // @@protoc_insertion_point(field_mutable:Weights.late)
  return _msg;
}
inline void Weights::set_allocated_late(::WeightVector* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::WeightVector*>(_impl_.late_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::WeightVector*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.late_ = reinterpret_cast<::WeightVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:Weights.late)
}

// optional .WeightVector clipped = 3;
inline bool Weights::has_clipped() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.clipped_ != nullptr);
  return value;
}
inline void Weights::clear_clipped() {
  if (_impl_.clipped_ != nullptr) _impl_.clipped_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::WeightVector& Weights::_internal_clipped() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::WeightVector* p = _impl_.clipped_;
  return p != nullptr ? *p : reinterpret_cast<const ::WeightVector&>(::_WeightVector_default_instance_);
}
inline const ::WeightVector& Weights::clipped() const {
  // @@protoc_insertion_point(field_get:Weights.clipped)
  return _internal_clipped();
}
inline void Weights::unsafe_arena_set_allocated_clipped(::WeightVector* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.clipped_);
  }
  _impl_.clipped_ = reinterpret_cast<::WeightVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Weights.clipped)
}
inline ::WeightVector* Weights::release_clipped() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::WeightVector* released = _impl_.clipped_;
  _impl_.clipped_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::WeightVector* Weights::unsafe_arena_release_clipped() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Weights.clipped)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::WeightVector* temp = _impl_.clipped_;
  _impl_.clipped_ = nullptr;
  return temp;
}
inline ::WeightVector* Weights::_internal_mutable_clipped() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.clipped_ == nullptr) {
    auto* p = CreateMaybeMessage<::WeightVector>(GetArenaForAllocation());
    _impl_.clipped_ = reinterpret_cast<::WeightVector*>(p);
  }
  return _impl_.clipped_;
}
inline ::WeightVector* Weights::mutable_clipped() {
  ::WeightVector* _msg = _internal_mutable_clipped();
  // @@protoc_insertion_point(field_mutable:Weights.clipped)
  return _msg;
}
inline void Weights::set_allocated_clipped(::WeightVector* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::WeightVector*>(_impl_.clipped_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::WeightVector*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.clipped_ = reinterpret_cast<::WeightVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:Weights.clipped)
}

// repeated int32 earlyPieceSquares = 4;
inline int Weights::_internal_earlypiecesquares_size() const {
  return _internal_earlypiecesquares().size();
}
inline int Weights::earlypiecesquares_size() const {
  return _internal_earlypiecesquares_size();
}
inline void Weights::clear_earlypiecesquares() {
  _internal_mutable_earlypiecesquares()->Clear();
}
inline ::int32_t Weights::earlypiecesquares(int index) const {
  // @@protoc_insertion_point(field_get:Weights.earlyPieceSquares)
  return _internal_earlypiecesquares().Get(index);
}
inline void Weights::set_earlypiecesquares(int index, ::int32_t value) {
  _internal_mutable_earlypiecesquares()->Set(index, value);
  // @@protoc_insertion_point(field_set:Weights.earlyPieceSquares)
}
inline void Weights::add_earlypiecesquares(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_earlypiecesquares()->Add(value);
  // @@protoc_insertion_point(field_add:Weights.earlyPieceSquares)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Weights::earlypiecesquares() const {
  // @@protoc_insertion_point(field_list:Weights.earlyPieceSquares)
  return _internal_earlypiecesquares();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Weights::mutable_earlypiecesquares() {
  // @@protoc_insertion_point(field_mutable_list:Weights.earlyPieceSquares)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_earlypiecesquares();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& Weights::_internal_earlypiecesquares() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.earlypiecesquares_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Weights::_internal_mutable_earlypiecesquares() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.earlypiecesquares_;
}

// repeated int32 latePieceSquares = 5;
inline int Weights::_internal_latepiecesquares_size() const {
  return _internal_latepiecesquares().size();
}
inline int Weights::latepiecesquares_size() const {
  return _internal_latepiecesquares_size();
}
inline void Weights::clear_latepiecesquares() {
  _internal_mutable_latepiecesquares()->Clear();
}
inline ::int32_t Weights::latepiecesquares(int index) const {
  // @@protoc_insertion_point(field_get:Weights.latePieceSquares)
  return _internal_latepiecesquares().Get(index);
}
inline void Weights::set_latepiecesquares(int index, ::int32_t value) {
  _internal_mutable_latepiecesquares()->Set(index, value);
  // @@protoc_insertion_point(field_set:Weights.latePieceSquares)
}
inline void Weights::add_latepiecesquares(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_latepiecesquares()->Add(value);
  // @@protoc_insertion_point(field_add:Weights.latePieceSquares)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Weights::latepiecesquares() const {
  // @@protoc_insertion_point(field_list:Weights.latePieceSquares)
  return _internal_latepiecesquares();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Weights::mutable_latepiecesquares() {
  // @@protoc_insertion_point(field_mutable_list:Weights.latePieceSquares)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_latepiecesquares();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& Weights::_internal_latepiecesquares() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latepiecesquares_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Weights::_internal_mutable_latepiecesquares() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.latepiecesquares_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fweights_2eproto_2epb_2eh
