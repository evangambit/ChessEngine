#include "piece_maps.h"

#include <cassert>

namespace ChessEngine {

namespace {
const int32_t kEarlyPieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White P
   0,   0,   0,   0,   0,   0,   0,   0,
  19,  18,  46,  32, -12,  23, -18,-118,
 -35, -28,  13,   7,  20,  24,  20, -23,
   6,  13,   8,   2,   6,  33,  24,  14,
  -1,  -7,   0,  -7,  -6,   1, -10,  -5,
  -4,  -5,  -6, -11,  -4,  -2,  11,  -3,
  -4,  -3, -14, -19, -17,  11,   8,   1,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White N
 -18,   3, -35, -21,  13,   4,-110,  83,
  -9,  19,  24, -43,  42,  64,  19,  54,
  49,  34,  17,  79,  83,  89,  80,  84,
  41,  47,  43,  61,  40,  66,  43,  71,
  25,  55,  57,  30,  55,  48,  56,  23,
  18,  39,  33,  35,  49,  35,  55,   7,
   8,  11,  21,  31,  32,  33,  -3,  19,
 -35,  24,   3,  11,  26,   8,  23, -10,
// Early White B
  61,  11, -60,  44, -13,  -6,   3,  61,
   2,  54,  55,  -7,  19,  54,  30,   5,
  17,  43,  32,  67,  86,  87,  64,  44,
  34,  31,  53,  31,  67,  59,  30,  31,
  31,  41,  25,  46,  45,  31,  27,  31,
  27,  37,  36,  35,  40,  22,  33,  32,
  28,  40,  42,  23,  28,  39,  35,  38,
  36,  49,  33, -12,   6,  21,  30,  13,
// Early White R
  44, -33,  57,  78,  58, -54,  23,  75,
  19,  38,  54,  64,  67,  68,  97,  65,
   9,  38,  20,  38,  86, 125,  92,  72,
 -23, -12,   7,  17,  19,  30,  74,  52,
   5,   0,  -2,  10,  16,   9,  27,  17,
  -4,   0,   2,   7,  15,  23,  69,  14,
 -11,  -7,   3,   3,   2,  16,  29, -10,
   7,  13,  13,  16,  26,  17,  -4,  14,
// Early White Q
  61,  55,  74, 103,  63, 151, 133, 116,
  41,  51,  60,  49,  95,  87,  75, 129,
  53,  44,  66,  54,  94, 183, 105, 102,
  30,  28,  50,  39,  66,  67,  57,  52,
  34,  47,  31,  29,  37,  30,  46,  66,
  36,  40,  31,  34,  35,  40,  61,  66,
  29,  41,  51,  50,  52,  69,  59,  39,
  20,  38,  48,  46,  44,  37,  29,  54,
// Early White K
   1, -88, -76, -14, -81,-127, -76,-136,
  73,-139,-105,  -8,-211,-126,-155,-282,
  20,   2, -47, -67, -84,  -7,  36,   8,
-101, -35,-163,-210,-113,-131, -50,-113,
-103, -72,-106,-125, -77,-103,-187, -91,
  11,   4, -69, -78, -60, -71, -16, -36,
  55,   7, -20, -35, -23,  -5,  40,  47,
  -5,  27,  -2, -42,   5, -35,   6,  18,
// Early BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
   9,  11,  15,  19,  11, -18, -16,  -7,
   9,  11,   8,   7,  -3,  10, -18,  -6,
   8,   8,   1,  10,   7,   1,  20,   4,
 -15,  -7,  -2,  -4, -13, -35, -20,  -9,
  34,  13, -11, -21,  -9, -30, -21,  31,
 -67,  -8, -13, -16, -79, -45, 124, 124,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early BlackN
   8, -22,  -5,  -3, -28, -17, -27,  17,
  -7, -15, -28, -30, -37, -46, -34, -25,
 -14, -40, -30, -44, -45, -36, -59, -15,
 -35, -44, -47, -41, -53, -63, -58, -35,
 -39, -38, -44, -50, -38, -74, -43, -67,
  -1, -39, -43, -46, -57, -62, -67, -76,
   6, -10,  -6,   1, -49, -65,  30, -45,
  17,  47,   4, -10, -40, -39,  61, -17,
// Early BlackB
 -16, -38, -21, -19,  -9, -20,  -3, -14,
 -29, -32, -35, -14, -29, -55, -38, -35,
 -22, -31, -23, -29, -20, -27, -35, -34,
 -22, -24, -23, -40, -48, -28, -37, -20,
  -1, -31, -46, -53, -49, -61, -29, -13,
 -23, -26, -29, -46, -52, -88, -63, -45,
  -1, -39, -12,  -9, -41, -35, -26,  18,
 -83,  10,  51,  -7,  39,  21, -89, -49,
// Early BlackR
  -4,  -7,  -6, -15, -23, -17,   7, -14,
  19,  -3,   1,  -9,   0, -25, -49,   2,
   1,   6,   9,   8, -11,  -8, -58, -18,
  13,   9,   4, -19, -27,   9, -31,  -1,
  23, -12,   5, -42, -52, -51, -54, -26,
 -13, -28, -45, -23, -58, -63,-104, -83,
 -26, -19, -51, -59, -84, -55, -75, -71,
 -35, -22,   6,  52, -47, -15,   2, -80,
// Early BlackQ
 -27, -36, -42, -45, -47, -20, -49, -18,
 -41, -42, -51, -34, -48, -62, -50, -61,
 -33, -42, -30, -21, -16, -26, -67, -70,
 -40, -60, -21, -35, -50, -44, -60, -46,
 -46, -43, -77, -55, -62, -79, -46, -73,
 -18, -67, -60, -53, -61,-116, -95,-104,
 -47, -37, -27,  12, -41, -99, -42,-104,
 -70, -48, -85, -17, -33, -40, -49,-108,
// Early BlackK
 -19, -14,   8,  56,  -6,  40,  -3, -13,
 -53, -29,  14,  32,  18,   6, -33, -39,
 -11,  31,  97,  51,  74,  80,  66,  12,
 217, 130,  92,  17,  37, 145, 131, 144,
 165, 101, 100,  57,  47,  84,  77,  74,
  57, 189,  51,  37,  69, 146, -15, 140,
 107,  16, 111, 184, 105,  33,  62, 270,
  16, -75,-152,-222, -19,  -6,-372, 192,
};

const int32_t kLatePieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White P
   0,   0,   0,   0,   0,   0,   0,   0,
  59,  49,  47,   4,   2, -14,  16,  77,
  59,  46,  23,   6,  -4,  14,  13,  31,
  29,  23,  20,   9,  17,   7,   6,  11,
  14,  15,   9,  15,  17,  16,  14,  10,
  11,  13,  15,  19,  21,  22,  11,   3,
  15,  13,  18,   1,  32,  17,  19,   6,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White N
  12,   6,  45,  55,  50,  24,  13, -61,
  36,  50,  30,  77,  41,  25,  23,   7,
  35,  25,  50,  23,  26,  15,  25,  17,
  32,  34,  36,  32,  33,  46,  51,  22,
  45,  27,  47,  43,  31,  41,  28,  48,
  27,  30,  25,  47,  51,  25,   4,  51,
  33,  37,  27,  29,  16,  33,  58,  29,
  38,   3,  43,  37,  29,  40,   2,  32,
// Late White B
  17,  27,  62,  60,  37,  48,  11,  31,
  48,  30,  25,  33,  41,  30,  35,  49,
  56,  42,  33,  27,  16,  46,  24,  43,
  52,  52,  36,  40,  25,  28,  58,  39,
  41,  34,  41,  30,  27,  38,  45,  31,
  35,  37,  40,  34,  36,  40,  33,  29,
  29,  17,  37,  38,  31,  37,  33,  21,
  24,  30,  29,  44,  45,  42,  26,  24,
// Late White R
  92, 110,  90,  83,  81, 107,  88,  75,
  99,  97,  90,  81,  80,  79,  76,  74,
 101,  90,  97,  79,  67,  70,  75,  70,
 104, 100, 100,  81,  84,  90,  68,  71,
  94, 105, 108,  94,  97, 102,  99,  95,
  99, 117, 100,  91,  79,  80,  73,  76,
  99, 103,  95,  91,  88,  82,  89,  92,
  86,  91,  93,  86,  80,  87,  99,  71,
// Late White Q
 244, 289, 297, 262, 323, 270, 270, 246,
 275, 274, 313, 296, 296, 352, 273, 275,
 243, 304, 289, 292, 302, 268, 327, 284,
 281, 311, 303, 343, 335, 345, 333, 331,
 261, 276, 320, 333, 328, 331, 305, 274,
 251, 250, 317, 282, 302, 289, 274, 239,
 264, 272, 238, 247, 244, 227, 232, 303,
 271, 246, 256, 222, 251, 244, 252, 185,
// Late White K
 -64, -45, -10,   3,  24,  -1,   5, -17,
 -27,  20,  39,  23,  46,  59,  60,  29,
  10,  28,  34,  35,  36,  53,  34, -12,
   5,  23,  53,  45,  33,  37,  19,   1,
 -15,   4,  31,  32,  20,  29,  18, -16,
 -29,   3,  24,  25,  23,  33,   3,  -6,
 -33,  -9,  11,   7,   0,   3, -11, -30,
  14, -10,  -3,   7,   0,  22,  -5, -18,
// Late BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
 -16, -17, -18, -20, -17, -17, -16,  -6,
  -7, -11, -14, -12, -17, -22, -10,  -5,
 -16,  -8,  -3, -19, -19, -17, -18, -11,
 -22, -13, -14, -11, -11, -10, -11, -17,
 -42, -27, -16,   4,  -1, -19, -28, -32,
 -34, -57, -35, -15,  20, -26, -68, -47,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late BlackN
 -18, -10, -29, -53, -32, -35, -16, -20,
 -28, -39, -23, -27, -23, -28, -25, -44,
 -30, -23, -32, -44, -46, -34, -22, -56,
 -35, -34, -53, -39, -38, -49, -25, -30,
 -36, -45, -42, -44, -34, -33, -41, -58,
 -51, -33, -41, -32, -39, -31, -24,   2,
 -47, -45, -43, -45, -36, -11, -30, -22,
  25, -43, -19, -38, -18,   6, -19,  73,
// Late BlackB
 -27, -29, -31, -41, -30, -45, -45, -38,
 -24, -21, -42, -37, -41, -26, -35, -15,
 -23, -46, -44, -46, -52, -39, -30, -38,
 -37, -35, -54, -38, -40, -40, -23, -36,
 -55, -53, -44, -37, -37, -38, -46, -40,
 -53, -44, -39, -34, -28, -41, -49, -46,
 -42, -48, -53, -40, -20, -38, -27, -44,
  -7, -44, -43, -27, -67, -47, -28, -25,
// Late BlackR
 -85, -90, -96, -89, -80, -87,-105, -71,
-100, -89, -99, -91, -90, -77, -71, -91,
 -99,-103,-105, -95, -84, -81, -70, -87,
-116,-107,-110,-101, -91,-106, -92, -91,
-107, -97, -97, -92, -74, -71, -92, -88,
 -94, -91, -87, -89, -73, -80, -81, -69,
 -91,-105, -96, -99, -76, -87, -78, -75,
 -82, -83, -93,-111, -77, -82,-109, -75,
// Late BlackQ
-251,-239,-243,-237,-248,-243,-247,-257,
-231,-263,-243,-278,-262,-241,-263,-258,
-242,-260,-313,-317,-332,-315,-268,-273,
-231,-279,-311,-339,-321,-312,-259,-318,
-287,-322,-252,-320,-364,-329,-350,-303,
-316,-282,-281,-319,-372,-337,-317,-314,
-248,-308,-362,-372,-338,-339,-293,-275,
-259,-269,-277,-345,-325,-310,-283,-279,
// Late BlackK
  31,  15,  -1, -16,   8, -24,   6,  18,
  32,  23, -11,  -2,  -4,  -2,  11,  25,
  24, -15, -36, -18, -30, -31, -10,   9,
   4,  -3, -23,  -8, -11, -38,  -6,   2,
  -3, -22, -32, -30, -33, -40, -21,  12,
 -18, -51, -32, -24, -26, -52, -29, -27,
   8, -29, -28, -22, -20, -54, -53, -48,
  55,  73,  74,  72,   2,  -1,  28, -21,
};

}  // namespace

int32_t early_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kEarlyPieceMap[cp * 64 + sq];
}

int32_t late_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kLatePieceMap[cp * 64 + sq];
}

}  // namespace ChessEngine