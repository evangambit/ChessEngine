#include "piece_maps.h"

#include <cassert>

namespace ChessEngine {

namespace {
const int32_t kEarlyPieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Early White P
   0,   0,   0,   0,   0,   0,   0,   0,
  43,   1,  28,  14,  19,   6, -31, -55,
 -16, -23,  33,  -5,  17,  15, -17, -38,
  24,  20,  18,   6,  12,  32,  15,  17,
  10,   0,   2,  -4,  -6,  -3, -11,   6,
   5,  -1,  -5,   0,   0, -10,  11,   5,
   1,   4,  -9, -20,  -4,   8,   7,   1,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Early White N
  64,  19,  27,  75,  44,  44,  -2,  76,
   4,   5,  37,  23,  26,  56,  12,  30,
  11,  36,   7,  22,  21,   0,  32,  44,
  24,  34,   7,  31,   7,  24,  38,  40,
  37,  57,  42,  18,  44,  31,  58,  28,
  28,  49,  22,  19,  28,  22,  60,  26,
  11,  16,  43,  43,  44,  49,  14,  28,
 -15,  20,   4,  26,  28,  18,  18,  -5,
  // Early White B
  79,  11, -25,  71,  33,  14,  16,  77,
   4,  32,  49,  -1,  -8,  58, -23,   8,
   9,  52,  52,  53,  58,  66,  50,  33,
  31,  16,  46,  44,  49,  46,  26,  31,
   9,  37,  21,  40,  39,  23,  30,  11,
  16,  25,  31,  27,  29,  11,  22,  23,
   7,  27,  32,  10,  16,  21,  18,  13,
   9,  15,  18, -14,  -7,  13,   3,   3,
  // Early White R
  42,  22,  14,  11,  22, -20,  22,  49,
   1,  27,  34,  34,  46,  49,  50,  35,
   9,  33,  32,  33,  55,  51,  45,  43,
   2,  -1,   4,  29,  28,  38,  44,  28,
  24,  31,  27,  29,  33,  44,  49,  36,
  20,  21,  16,  22,  30,  30,  62,  40,
   6,  26,  19,  21,  25,  33,  36,   4,
  21,  24,  22,  30,  38,  31,   9,  20,
  // Early White Q
  77,  67,  72,   8,  72,  73,  76,  78,
  53,  48,  58,  17,  66,  77,  52,  64,
  45,  53,  65,  67,  73,  80,  75,  77,
  36,  30,  66,  66,  69,  68,  63,  61,
   9,  57,  36,  41,  59,  44,  52,  57,
  30,  33,  40,  38,  33,  37,  49,  46,
  27,  47,  39,  39,  39,  40,  43,  38,
   3,   2,  21,  31,  24,   4,   5,  -9,
  // Early White K
  -8, -42, -36, -36, -38, -31,  -9, -60,
 -38,   4,  28,  26,   4, -15, -17, -47,
 -39,  18,   4,  15,  15,   7,  10,  -3,
 -25,   3,  32,   3,  21, -31,  -3, -36,
 -11,  17,  29,  22,  20,  10,  -2, -45,
 -10,   9,  -5,  -8,  13, -22,   1, -27,
   9,   5,   4, -19,  -5,  -1,  24,  18,
  -2,  13,  -9, -49,   6, -30,  -1,  10,
  // Early BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
   2,   2,  12,  19,   1, -14, -12,  -5,
   0,   5,  10,   1,  -6,  23, -16, -11,
  -4,  -3,  -3,   5,   6,   4,  18,  -2,
 -23, -14, -17,  -5, -12, -33,  -9,  -9,
  25,  24, -29,  -5, -21, -12,  15,  36,
 -34,  11, -18,  -1, -21, -15,  43,  30,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Early BlackN
  20, -16,  -8, -19, -32, -21, -27,  14,
  -8, -12, -35, -43, -49, -49, -46, -35,
 -26, -42, -18, -33, -36, -24, -58, -31,
 -34, -61, -34, -25, -32, -44, -65, -41,
 -21, -19,  -6, -23, -13, -28, -35, -58,
 -20, -25, -16,   0, -11,   2, -39, -33,
  -9,  -8, -25, -40, -44, -61,  -8, -22,
 -57, -29, -18, -74, -53, -28,  11, -74,
  // Early BlackB
 -12, -12, -10,   2,   5, -10, -10,   5,
  -6, -18, -20,  -4, -15, -23, -17, -18,
 -10, -11, -17, -20, -19, -16, -28, -29,
  -9, -26, -18, -42, -48, -18, -28,  -4,
 -26, -19, -41, -53, -51, -52, -22, -20,
  -7, -40, -51, -48, -35, -63, -45, -29,
  -8, -33, -52,  -6, -12, -45,  26,  -2,
 -80, -10,  45, -69, -17, -16, -24, -75,
  // Early BlackR
 -21, -24, -23, -25, -34, -33,  -1, -21,
  -9, -24, -21, -24, -20, -42, -38,   5,
 -18, -17, -16, -14, -32, -17, -46, -23,
 -18, -24, -31, -25, -15, -29, -44, -12,
 -13, -26, -21, -21, -43, -34, -51, -14,
   9, -36, -39, -39, -51, -51, -56, -37,
  -7,  -1, -29, -46, -51, -32, -16, -31,
 -46, -12,  -4,  -2,  13,  20, -28, -48,
  // Early BlackQ
 -15, -10, -20, -31, -15,  -6,   7, -12,
 -22, -36, -38, -28, -34, -48, -24, -32,
 -22, -34, -33, -31, -36, -29, -50, -31,
 -15, -63, -38, -42, -54, -43, -65, -48,
 -53, -30, -60, -66, -63, -67, -61, -62,
 -43, -56, -64, -66, -71, -81, -77, -77,
 -44, -29, -50,  11, -44, -72, -54, -64,
 -76, -62, -66, -26, -72, -66, -75, -82,
  // Early BlackK
  -5,  -8,  10,  48,  -4,  33,   3,  -9,
  -4, -23,   7,  18,   3,   0, -20, -15,
 -19,  -2,  14,  -3,   2,   0,   0,  27,
  21,   5,   4,  -5, -22, -29, -40,  35,
  -8,  23, -30,  11,  -8, -25, -11,  36,
  25,  31, -32,  -6, -18,  16,  -7,  26,
  47,  34,  -4,  -3,  52, -13,  35,  33,
  24,  32,  19,  40,  29,  21,  13,  43,
};

const int32_t kLatePieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Late White P
   0,   0,   0,   0,   0,   0,   0,   0,
  42,  31,  31,   3,  13,  -9,  -9,  21,
  24,  38,  -4, -12, -13,  -1,   6,  18,
  29,  24,  13,   1,  10,  17,  19,  23,
  22,  21,  12,   8,  12,  15,  16,  14,
   9,   6,   4,   8,  10,  13,   3,   8,
  20,  11,  20,  18,  33,  19,  13,  14,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Late White N
  -6,  -2,  22,  25,  12,  20,  -1,  -8,
  19,  19,  20,  33,  36,  11,  10,  -8,
   8,  22,  18,   8,  20,  20,  10, -11,
  19,  22,  17,   7,  14,  22,  34,  14,
  27,  33,  33,  37,  28,  27,  33,  35,
  41,  26,  10,  42,  34,  14,  11,  31,
  21,  27,  28,  28,  35,  26,  25,  13,
  27,  32,   9,  32,  18,  17,  16,   0,
  // Late White B
  33,  30,  35,  37,  25,  16,  15,   7,
  32,  36,  25,  38,  36,  17,  26,  12,
  56,  34,  22,  37,  25,  32,  37,  47,
  41,  47,  38,  48,  44,  27,  41,  21,
  33,  48,  44,  46,  41,  40,  26,  11,
  32,  23,  42,  36,  40,  41,  23,  22,
  37,  21,  23,  34,  24,  28,  24,  13,
  26,  28,  31,  29,  27,  40,  23,  14,
  // Late White R
  37,  43,  27,  26,  25,  38,  50,  34,
  53,  53,  35,  25,  23,  33,  41,  30,
  53,  52,  35,  34,  23,  23,  37,  35,
  46,  53,  40,  34,  18,  32,  40,  30,
  66,  67,  61,  55,  53,  55,  54,  54,
  61,  63,  63,  55,  45,  66,  50,  51,
  60,  65,  60,  50,  47,  50,  45,  60,
  72,  69,  70,  58,  57,  69,  73,  61,
  // Late White Q
  74,  73,  74,  81,  76,  74,  79,  74,
  67,  79,  74,  84,  76,  76,  81,  73,
  71,  72,  75,  78,  74,  81,  76,  80,
  74,  73,  73,  77,  77,  76,  75,  80,
  87,  65,  76,  84,  72,  78,  72,  72,
  64,  78,  80,  76,  72,  81,  73,  73,
  64,  76,  69,  77,  69,  64,  55,  53,
  66,  65,  66,  80,  64,  38,  58,  51,
  // Late White K
 -51, -28,  -3, -32, -35,  18,  -9, -26,
 -35,   3,   0,  -9,   4,   6,  12, -41,
 -17,   7,  24,   1,  18,  10,  11, -23,
 -24,  -2,  22,  14,  19,  23,  -2, -19,
 -44, -17,  11,   8,   4,  17, -17, -27,
 -26,  -6,  30,  26,  16,  33,   5, -15,
 -15,  -6,   6,  -5,  -7,  11,  -9, -24,
  -1,   0,   5,   9, -10,  29,   0, -13,
  // Late BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
 -20, -11, -17, -22, -16, -19, -14, -13,
 -14,  -5,  -8,  -2,  -5, -17,  -1,  -7,
 -21, -17, -13,  -9, -11, -17, -21, -17,
 -29, -25, -16,  -8, -11, -14, -29, -28,
 -39, -25,   2,   6,   6, -11, -18, -22,
 -40, -17, -14,  -8, -14,  -9,  -4,  -4,
   0,   0,   0,   0,   0,   0,   0,   0,
  // Late BlackN
   8, -28, -13, -23, -19, -14, -29,   5,
 -17, -33, -26, -35, -29, -28, -14, -14,
 -25, -38, -25, -31, -33, -17, -24, -27,
 -18, -34, -31, -35, -28, -29, -32, -29,
 -21, -27, -22,  -8,   0, -25, -26, -13,
 -21, -27, -14, -24, -13, -30, -22,  -3,
   7, -21,  -8, -25, -38,  -2, -19,  15,
  36,  15, -23,  -4, -18, -10,  11,  42,
  // Late BlackB
 -14,  -9, -34, -22, -26, -39, -15, -19,
 -38, -22, -28, -26, -36, -27, -36,   1,
 -31, -44, -45, -50, -43, -39, -19, -25,
 -27, -29, -44, -47, -44, -42, -29, -20,
 -30, -44, -34, -40, -44, -34, -37, -24,
 -40, -42, -30, -23, -36, -32, -11, -43,
 -32, -26, -31, -33, -43, -30, -21, -26,
 -22, -33, -31, -31, -26, -29, -17,  -7,
  // Late BlackR
 -73, -67, -68, -62, -59, -68, -75, -60,
 -65, -69, -61, -53, -57, -56, -53, -60,
 -66, -60, -63, -56, -47, -60, -46, -50,
 -65, -59, -63, -54, -56, -57, -62, -54,
 -49, -37, -36, -28, -23, -33, -29, -33,
 -59, -38, -40, -27, -20, -34, -46, -39,
 -49, -49, -32, -15, -18, -40, -45, -39,
 -28, -28, -45, -34, -28, -41, -35, -41,
  // Late BlackQ
 -57, -66, -59, -81, -71, -49, -65, -53,
 -68, -77, -71, -82, -79, -64, -53, -49,
 -67, -82, -83, -79, -74, -79, -68, -46,
 -89, -62, -73, -87, -75, -73, -73, -74,
 -72, -81, -69, -70, -77, -72, -70, -74,
 -65, -74, -66, -73, -66, -80, -77, -80,
 -65, -81, -77, -83, -74, -80, -65, -68,
 -71, -74, -72, -84, -80, -71, -77, -77,
  // Late BlackK
  15,   6,  -2,  -6,   6, -29,  -1,  15,
  28,  20,  -9,   9,   4, -11,  11,  25,
  23,   2, -26, -16, -23, -28,  -5,  17,
  37,  18, -16, -11,  -7, -13,  16,  34,
  28,   4, -19, -20,  -9, -20,   5,  23,
  25,  -1, -15,   0, -17, -15,  -9,  26,
  48,  12, -17,   6,  -8, -29,   0,  27,
  24,   7,  21,  30,   1,  -3,  16,  33,
};

}  // namespace

int32_t early_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kEarlyPieceMap[cp * 64 + sq];
}

int32_t late_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kLatePieceMap[cp * 64 + sq];
}

}  // namespace ChessEngine