#include "piece_maps.h"

#include <cassert>

namespace ChessEngine {

namespace {
const int32_t kEarlyPieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White P
   0,   0,   0,   0,   0,   0,   0,   0,
  42,  22,  25,   1, -17,   8, -38,-124,
 -34, -31,   6,   7,  22,  31,  13, -20,
  11,  13,   5,   0,   6,  33,  26,  18,
   2, -10,  -3,  -8,  -7,   3,  -7,   3,
  -6,  -5,  -5, -12,  -2,  -5,  14,   4,
  -9,  -2, -15, -23, -16,  13,  13,   5,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White N
  -7, -24,  -6,   4,  36,  36,-131,  69,
  -9,  37,  52, -24,  55,  76,  51,  67,
  60,  65,  31, 104, 101, 113,  96,  97,
  60,  66,  62,  79,  58,  84,  60,  81,
  44,  72,  73,  50,  71,  65,  66,  42,
  37,  57,  53,  51,  65,  56,  76,  28,
  24,  32,  42,  51,  49,  52,  14,  36,
 -16,  41,  11,  21,  36,  21,  42,  16,
// Early White B
  87,  25, -31,  34, -19,  -1, -15,  76,
  20, 117,  82,  -1,  55,  80,  98,  33,
  24,  64,  66,  87,  94, 120,  70,  57,
  50,  45,  72,  54,  84,  66,  51,  39,
  37,  56,  36,  69,  57,  50,  40,  44,
  45,  48,  53,  50,  59,  33,  52,  48,
  33,  57,  57,  44,  41,  60,  48,  48,
  52,  54,  52,   5,  19,  37,  44,  23,
// Early White R
  68, -21,  75, 109,  93, -25,  86,  86,
  47,  68,  92,  94, 103, 107, 131,  94,
  28,  48,  44,  45,  99, 127,  96,  66,
  -8,  12,  20,  34,  26,  53,  79,  54,
   0,  10,   2,  14,  26,  24,  53,  28,
  -8,  10,  15,  15,  26,  41,  80,  29,
  -8,   4,  12,  14,   9,  31,  22,  -4,
  20,  23,  24,  30,  39,  33,  12,  28,
// Early White Q
 105,  88,  91, 107,  67, 216, 160, 159,
  59,  89,  96,  62,  95, 118, 124, 167,
  82,  67,  88,  92, 115, 198, 136, 134,
  66,  64,  87,  69,  89,  95,  90,  79,
  72,  78,  64,  60,  74,  71,  84, 112,
  68,  75,  68,  69,  78,  77, 101, 106,
  58,  79,  88,  86,  86, 108,  95,  75,
  56,  57,  72,  81,  73,  61,  57,  68,
// Early White K
 -98,  94, -27,  70, -87,-133,-100,-182,
 157, -98,-131,-153,-166,-102,-115,-267,
  18,  38,-126,-117,-110,  12, -22, -49,
 -70,  25,-198,-190,-187,-123, -87,-182,
 -97, -21,-135,-139, -80,-104,-163,-131,
  -3,  -4, -73, -79, -68, -91, -29, -50,
  61,  29, -21, -29, -30,  -4,  42,  52,
   7,  25, -12, -34,   7, -24,  10,  20,
// Early BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
  15,  11,  15,  23,  12, -22, -25, -14,
  11,  12,   5,   8,  -4,  12, -23, -12,
   7,  11,   3,  10,   9,  -3,  16,  -4,
 -14,  -5,  -2,  -1, -15, -37, -21, -17,
  31,   6,  -6, -12,  -7, -40, -23,  21,
 -92,  -3, -16,   3, -88, -40, 122, 122,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early BlackN
  -5, -40, -13, -18, -40, -28, -43, -11,
 -30, -28, -42, -50, -54, -62, -57, -44,
 -33, -53, -50, -61, -64, -54, -79, -35,
 -48, -62, -63, -58, -68, -79, -63, -50,
 -46, -56, -61, -67, -54, -86, -57, -84,
 -20, -57, -39, -79, -75,-101, -95, -78,
 -15, -16, -44, -10, -72, -97,  17, -59,
   8,  79,   4, -22, -12,   4,  33, -44,
// Early BlackB
 -23, -49, -37, -32, -21, -40, -27, -26,
 -40, -46, -52, -30, -45, -68, -56, -51,
 -37, -45, -37, -49, -36, -41, -54, -56,
 -37, -40, -38, -54, -62, -42, -50, -38,
 -23, -49, -66, -67, -68, -83, -46, -26,
 -34, -54, -59, -76, -73, -99, -83, -54,
 -33,-100, -24, -42, -77, -62, -90,   1,
 -94,   9,  23,  -8,  40,   9, -82, -69,
// Early BlackR
 -16, -18, -16, -28, -36, -33,  -9, -26,
  14, -18,  -8, -17, -15, -44, -55,  -7,
  10,  -4,   7,   0, -17, -18, -72, -18,
  19,  12,   3, -24, -33,  -5, -41, -13,
   6, -30, -18, -49, -67, -64, -50, -53,
 -17, -45, -61, -45, -65, -77,-110, -89,
 -61, -48, -86, -90,-103,-100, -88,-127,
 -73, -50, -28,  -4, -95, -36,-114,-111,
// Early BlackQ
 -54, -55, -68, -79, -74, -47, -64, -66,
 -61, -76, -85, -68, -81,-103, -92, -99,
 -78, -79, -64, -58, -55, -65,-105, -92,
 -80, -89, -60, -66, -89, -84, -98, -92,
 -76, -74, -96, -87, -84,-114, -75, -97,
 -64, -85, -67, -90, -98,-124,-127,-144,
 -81, -66, -60,   9, -44,-119, -97,-153,
 -91, -62,-128, -54, -46, -53, -29,-136,
// Early BlackK
 -21, -16,  15,  49,  -6,  32,  -5, -10,
 -73, -41,  16,  30,  28,   8, -36, -40,
 -15,  26, 109,  50,  88,  93,  67,  32,
 179, 139,  84,  38,  50, 168, 136, 159,
 182, 107, 139,  76,  21, 125,  83,  85,
  67, 263,  61,  53,  69,  78,  25, 130,
  70,   7,  48, 114,  89,  63, 130, 251,
-103,   2, -22,-100,-142, -19,-252, 100,
};

const int32_t kLatePieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White P
   0,   0,   0,   0,   0,   0,   0,   0,
  78,  69,  71,  32,  13,   2,  40, 110,
  79,  62,  44,  23,   8,  30,  29,  47,
  41,  33,  33,  20,  22,  20,  17,  25,
  24,  27,  19,  25,  26,  24,  24,  16,
  21,  22,  23,  27,  31,  31,  20,  12,
  26,  24,  30,  19,  40,  27,  26,  15,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White N
  39,  60,  50,  89,  62,  31,  56, -21,
  89,  84,  52,  99,  63,  51,  50,  66,
  71,  56,  81,  50,  50,  51,  52,  49,
  70,  61,  67,  66,  63,  74,  78,  69,
  77,  56,  74,  66,  57,  61,  60,  79,
  53,  54,  46,  74,  70,  43,  21,  77,
  62,  72,  51,  49,  42,  57,  92,  67,
  70,  47,  80,  70,  65,  78,  44,  63,
// Late White B
  53,  67,  98, 121,  91,  81,  57,  67,
  91,  55,  72,  81,  81,  67,  67,  76,
  96,  88,  78,  73,  68,  78,  69,  92,
  94, 100,  83,  82,  82,  74,  99,  82,
  83,  82,  88,  76,  78,  85,  88,  72,
  74,  82,  86,  83,  84,  88,  71,  77,
  68,  64,  76,  79,  81,  75,  72,  60,
  61,  76,  60,  90,  90,  75,  62,  70,
// Late White R
 149, 175, 148, 135, 138, 163, 139, 139,
 156, 157, 147, 143, 138, 141, 134, 134,
 157, 154, 156, 136, 128, 138, 147, 134,
 166, 159, 162, 145, 151, 153, 134, 134,
 163, 174, 172, 161, 161, 165, 167, 164,
 169, 174, 157, 155, 146, 148, 140, 143,
 162, 163, 157, 153, 151, 143, 162, 155,
 149, 153, 159, 148, 144, 147, 161, 137,
// Late White Q
 381, 445, 467, 431, 512, 406, 437, 376,
 449, 435, 476, 487, 490, 519, 402, 428,
 414, 494, 465, 459, 494, 435, 497, 446,
 453, 478, 458, 505, 511, 507, 502, 511,
 448, 455, 484, 513, 490, 497, 477, 448,
 427, 421, 477, 453, 453, 467, 438, 411,
 438, 425, 397, 415, 419, 395, 396, 449,
 438, 421, 423, 394, 418, 412, 424, 390,
// Late White K
 -53, -59, -23, -30,  31,  -7,  34, -14,
 -69,   3,  33,  40,  40,  58,  61,   9,
   3,  24,  50,  56,  45,  42,  51,  -3,
  -9,  13,  57,  38,  43,  48,  27,   9,
 -17,  -1,  40,  39,  20,  34,  20, -13,
 -23,   2,  26,  35,  31,  41,   9,  -4,
 -38, -16,  11,   5,   8,   5, -13, -34,
 -18, -13,   5,   5,   0,  22,  -8, -18,
// Late BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
 -29, -26, -29, -27, -28, -23, -23, -13,
 -20, -22, -22, -25, -26, -32, -17, -13,
 -26, -22, -13, -28, -29, -24, -26, -17,
 -35, -23, -24, -19, -21, -17, -22, -25,
 -60, -46, -40, -16, -26, -29, -37, -51,
 -57, -62, -54, -29,  16, -35, -94, -80,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late BlackN
 -65, -46, -62, -80, -63, -68, -61, -55,
 -68, -70, -48, -48, -53, -55, -60, -70,
 -61, -48, -51, -67, -68, -53, -41, -77,
 -72, -55, -77, -67, -65, -74, -60, -65,
 -73, -68, -69, -71, -66, -68, -80, -91,
 -89, -51, -74, -59, -61, -66, -46, -31,
 -75, -70, -58, -71, -52, -31, -67, -29,
 -17, -86, -56, -57, -54, -57, -50,  58,
// Late BlackB
 -70, -71, -61, -83, -77, -78, -77, -74,
 -70, -62, -82, -79, -87, -70, -74, -57,
 -70, -90, -91, -89, -99, -86, -65, -82,
 -88, -89, -99, -88, -89, -89, -75, -76,
 -94,-100, -83, -82, -87, -82, -87, -81,
 -87, -81, -80, -65, -70, -85, -90, -85,
 -81, -73, -99, -81, -57, -75, -48, -89,
 -52, -91, -84, -82,-109, -95, -76, -67,
// Late BlackR
-152,-152,-161,-150,-145,-148,-164,-134,
-167,-153,-157,-152,-147,-137,-131,-149,
-167,-167,-167,-163,-150,-152,-136,-155,
-188,-173,-176,-169,-157,-180,-157,-155,
-169,-153,-159,-155,-134,-144,-155,-138,
-154,-150,-147,-149,-139,-145,-139,-132,
-148,-166,-152,-154,-137,-142,-138,-122,
-143,-146,-153,-162,-135,-151,-152,-139,
// Late BlackQ
-412,-419,-413,-401,-413,-408,-417,-375,
-408,-432,-404,-449,-434,-392,-401,-419,
-406,-414,-481,-483,-496,-478,-436,-457,
-407,-451,-480,-522,-476,-474,-427,-466,
-452,-491,-435,-482,-523,-491,-523,-479,
-461,-457,-487,-492,-521,-537,-461,-458,
-415,-458,-517,-559,-519,-503,-455,-417,
-416,-430,-416,-487,-487,-470,-506,-423,
// Late BlackK
  31,   9,  -7, -13,   5, -23,   5,  16,
  46,  25, -17,  -7, -13,  -9,   9,  28,
  27, -18, -44, -27, -39, -40, -13,   7,
  13,  -8, -28, -16, -17, -48, -13,   4,
  -8, -22, -41, -37, -29, -47, -27,  11,
 -18, -75, -40, -30, -31, -54, -44, -22,
   9, -36, -16,  -5, -25, -56, -61, -36,
  89,  55,  18,  56,  45,  -9,  23,  27,
};

}  // namespace

int32_t early_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kEarlyPieceMap[cp * 64 + sq];
}

int32_t late_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kLatePieceMap[cp * 64 + sq];
}

}  // namespace ChessEngine