#include "piece_maps.h"

#include <cassert>

namespace ChessEngine {

namespace {
const int32_t kEarlyPieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White P
   0,   0,   0,   0,   0,   0,   0,   0,
  30,  35,   4,  26,  26,  10, -57, -44,
 -19, -29,  11,   2,  21,  13,  18,  -8,
  13,  16,  10,   1,   7,  24,  20,  13,
   2, -12,   1,  -6,  -5,   2,  -7,  -2,
  -2, -10,  -6,  -9,  -1,   0,  14,   2,
  -2,  -6, -11, -19, -13,  13,  11,   4,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early White N
 -27, -45, -32,  30,  50,  49, -40,  -4,
   5,  25,  35, -35,  27,  51,  39,  61,
  -7,  30,   5,  38,  33,  -5,  45,  80,
  32,  36,  26,  43,  30,  59,  43,  62,
  25,  47,  47,  22,  42,  39,  56,  17,
  14,  36,  30,  25,  38,  30,  43,   5,
  13,  11,  33,  26,  27,  32,   7,  21,
 -15,  23,   3,   7,  21,  20,  21,   8,
// Early White B
  64,   3, -63,  15,  -9,  23,  50,  69,
   6,  36,  41, -70, -16,  73, -21,  33,
  18,  25,  37,  47,  60,  88,  48,  43,
  21,  22,  36,  33,  45,  32,  32,  39,
  27,  35,  22,  40,  28,  28,  31,  31,
  25,  32,  33,  29,  35,  18,  28,  29,
  18,  39,  38,  22,  24,  37,  30,  26,
  17,  37,  35,   3,   8,  20,  28,  14,
// Early White R
  29,  15,   0,  25,  19,  -3,  64,  83,
  17,  52,  78,  84,  63,  73,  92,  94,
  29,   7,   9,  38,  87,  73,  96,  85,
 -19,   0,   0,   6,  17,  34,  30,  50,
  -2,  -2,  22,  -3,   1,  20,  57,  17,
  -2, -10,  -1,  -5,   6,  19,  45,  25,
 -14,  -5,   0,   1,   9,  15,  34,  -6,
   8,  12,  13,  20,  28,  19,   6,  15,
// Early White Q
  53,  37,  40, -46, 139, 105, 140, 122,
  27,  31,  34, -17,  24, 112,  72, 118,
  36,  23,  46,  35,  92, 107,  84,  91,
   5,  10,  33,  33,  54,  46,  42,  45,
   9,  20,  17,  12,  22,   9,  30,  34,
   4,  23,  15,  19,  20,  20,  41,  52,
  20,  23,  31,  31,  31,  41,  41,  61,
  15,  18,  27,  28,  26,  18, -38,  70,
// Early White K
  -4,  24,-200,-220, -57,-242,-157,-338,
  55, -47, -51,  37, -43, -27,  24, -16,
  57,  70,  84,  81, -58,  98,  19, -20,
 -59, -61,  40, -38, -50,-110, -39,-131,
 -88, -34, -83, -62, -51, -79,-129, -62,
 -17, -60, -77, -39, -27, -59, -26, -33,
  15,  -7, -14, -32, -18,  -8,  31,  34,
   6,  22,  -6, -46,   4, -37,   3,  14,
// Early BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
   7,  10,  11,  18,  11, -21, -21, -10,
   7,  11,   8,   5,  -3,  10, -24,  -8,
   5,   7,   0,   7,   6,  -1,  11,   2,
  -8,  -7,  -6,  -3, -11, -27, -19, -11,
  26,  14,  -9,   4, -16, -27,   6,  18,
  -8,  -4,-102,   8, -25,  -2,  10,  72,
   0,   0,   0,   0,   0,   0,   0,   0,
// Early BlackN
  34, -20,  15,  -4, -22, -19, -24,   4,
   6,   8, -13, -27, -33, -38, -29, -28,
 -10, -29, -26, -30, -37, -29, -53, -12,
 -25, -30, -40, -27, -39, -49, -40, -24,
 -22, -31, -33, -30, -33, -57, -34, -69,
 -27, -15, -16, -15, -13,  -7, -42, -87,
 -21,  -7, -33,  19, -34, -43,  15, -45,
   0,   6,  31, -41, -87,   5,  13, -19,
// Early BlackB
 -13, -39, -18,  -8,  -4, -19, -14, -16,
 -23, -24, -36,  -8, -23, -37, -31, -24,
 -17, -25, -18, -23, -14, -20, -27, -33,
  -3, -19, -21, -31, -38, -20, -27, -23,
 -13, -23, -34, -39, -41, -34, -25, -14,
 -24, -20, -25, -14, -28, -57, -47, -42,
   5, -20, -15,  34,  13, -39,  11,  -3,
 -33,   6,  75, -33,  -3,  19, -15, -38,
// Early BlackR
  -5,  -8,  -8, -14, -24, -18,   4, -16,
  16,  -4,   3, -12,  -9, -17, -14,  13,
   1,   9,   4,   5,  -1,  -1, -45, -30,
  12,   6,  -7, -10,  -2,  -5, -44,  -4,
   3, -11, -21, -33, -25, -25, -30, -39,
 -11, -51, -37, -37, -22, -77, -79, -49,
 -27, -30, -52, -83, -94, -62, -27, -69,
   7, -25,  32,  48,  21,  13,  32, -70,
// Early BlackQ
  -9, -24, -26, -32, -29,  -3,  -1, -19,
 -28, -26, -34, -20, -30, -42, -44, -67,
 -21, -28, -16, -18,  -1, -24, -43, -27,
 -16, -32, -14, -13, -19, -19, -33, -45,
 -11, -11, -43, -36, -27, -48, -61, -57,
   7, -36, -34, -29, -63,-119, -58, -82,
 -20, -13, -20,  53,  -5, -96, -25, -82,
 -47, -37, -42,  51, -32, -24, -48, -96,
// Early BlackK
 -18, -14,   7,  54,  -3,  45,   0, -13,
 -51,  -7,   0,  31,  19,  17, -23, -30,
 -26,  -2,  65,  25,  59,  72,  28,  16,
  62,  81,  38,  13,   9, 117, 109,  84,
  43,  37,  16,  66,   2,  67, 148,  74,
  43, -10,  89,  25, -30,  35, -30,  64,
-109, -82, -10,  52, -66,  70,-116,  16,
-188,  35, -10,  90, -79,-115,  -3, -77,
};

const int32_t kLatePieceMap[13*64] = {
  // NO_COLORED_PIECE
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White P
   0,   0,   0,   0,   0,   0,   0,   0,
  43,  50,  23,  12,  -2,   8,  36,  44,
  37,  33,  29,   4, -12,  15,  11,  19,
  22,  14,  13,   5,  16,  14,  12,  11,
  15,  12,   9,  13,  11,  10,  10,   6,
   9,   9,  13,  15,  18,  18,   7,   1,
  14,  11,  16,   6,  23,  15,  10,   2,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late White N
  39,  14,  34,  41,  -2,  13,  38,   6,
  35,  38,   9,  59,  39,  12,   6,   7,
  35,   8,  39,  24,  34,  55,  15,   4,
  33,  23,  45,  26,  32,  33,  32,  28,
  44,  17,  33,  34,  22,  33,  19,  46,
  25,   9,   9,  42,  32,  14,   4,  51,
  28,  18,  18,  19,  20,  20,  38,  18,
  34, -10,  32,  40,  21,  14,   7,  47,
// Late White B
  35,  42,  70,  60,  27,  17,  15,  23,
  40,  35,  28,  52,  48,  21,  54,  19,
  47,  35,  26,  28,  16,  21,  26,  48,
  52,  49,  34,  36,  36,  42,  40,  40,
  35,  47,  41,  33,  40,  37,  35,  27,
  44,  36,  36,  40,  37,  32,  27,  37,
  33,  14,  30,  33,  29,  36,  33,  31,
  20,  36,  18,  43,  29,  37,  26,  29,
// Late White R
  76,  73,  73,  59,  63,  78,  60,  64,
  71,  68,  59,  50,  61,  53,  45,  45,
  65,  78,  77,  56,  46,  59,  49,  41,
  82,  76,  74,  72,  57,  68,  59,  45,
  80,  83,  72,  77,  79,  76,  59,  73,
  85,  75,  81,  74,  73,  72,  55,  54,
  84,  67,  69,  75,  59,  59,  49,  70,
  68,  73,  76,  69,  58,  70,  82,  51,
// Late White Q
 137, 170, 187, 220, 121, 148, 134, 128,
 174, 159, 189, 201, 206, 192, 168, 165,
 158, 169, 146, 169, 161, 187, 195, 199,
 198, 192, 173, 187, 165, 188, 191, 211,
 206, 175, 179, 210, 194, 243, 202, 197,
 191, 175, 211, 177, 191, 211, 172, 138,
 180, 170, 157, 165, 166, 152, 160, 145,
 187, 172, 166, 158, 175, 162, 211, 105,
// Late White K
 -43, -34,  26,  47, -11,  76,  68, -14,
 -39,   1,  25, -13,  30,  19,  17, -29,
  -9,  -7,   9,   9,  25,  22,  16,   3,
   0,   9,  17,  22,  20,  37,  11,   3,
   2,   0,  24,  14,  18,  20,  16, -14,
 -13,   5,  22,  21,  21,  23,   6,  -8,
 -21, -10,   8,   0,  -2,   6, -12, -24,
 -21, -11,  -5,  13,  -5,  21,  -7, -16,
// Late BlackP
   0,   0,   0,   0,   0,   0,   0,   0,
 -13, -11, -14, -13, -17, -12,  -8,  -1,
  -5,  -8, -12, -11, -14, -23,  -3,  -3,
 -14,  -6,  -7, -14, -13, -11,  -8,  -7,
 -23, -14, -12, -11, -17, -12, -10, -12,
 -38, -33, -14,  -9,   2, -17, -13, -31,
 -57, -61,  -9,  -5, -10, -31,   6, -58,
   0,   0,   0,   0,   0,   0,   0,   0,
// Late BlackN
 -53,  -2, -29, -41, -26, -27, -13, -22,
 -36, -44, -24, -17, -16, -20, -35, -29,
 -20, -16, -20, -41, -39, -17, -14, -48,
 -34, -28, -43, -34, -27, -31, -35, -41,
 -35, -20, -32, -28, -20, -29, -37, -18,
 -44, -28, -36, -37, -38, -41, -32,  -6,
 -15, -32, -14, -44, -27, -11, -37,  11,
  -9, -36, -36,   0, -27, -17, -10,  -2,
// Late BlackB
 -28, -29, -24, -40, -35, -33,  -9, -36,
 -44, -23, -36, -42, -41, -29, -30, -31,
 -25, -51, -50, -48, -54, -44, -30, -34,
 -27, -41, -39, -41, -38, -38, -40, -43,
 -48, -51, -23, -40, -38, -47, -50, -50,
 -58, -46, -32, -38, -30, -40, -40, -57,
 -48, -42, -46, -58, -55, -38, -34, -42,
 -26, -42, -55, -28, -45, -44, -35, -35,
// Late BlackR
 -66, -68, -73, -74, -62, -69, -77, -51,
 -84, -69, -78, -70, -62, -72, -66, -62,
 -71, -72, -73, -73, -72, -70, -59, -63,
 -90, -79, -73, -79, -78, -78, -64, -76,
 -75, -63, -63, -53, -69, -66, -61, -69,
 -68, -55, -65, -64, -65, -54, -60, -55,
 -72, -68, -68, -51, -44, -66, -67, -50,
 -68, -66, -82, -78, -54, -70, -78, -62,
// Late BlackQ
-193,-152,-151,-152,-167,-173,-159,-126,
-170,-157,-151,-193,-172,-156,-163,-155,
-171,-159,-206,-187,-207,-195,-192,-200,
-184,-169,-193,-216,-213,-200,-212,-179,
-186,-191,-141,-181,-178,-185,-210,-191,
-214,-164,-155,-176,-173,-149,-213,-197,
-164,-188,-190,-254,-186,-155,-225,-177,
-153,-137,-159,-203,-172,-203,-137,-128,
// Late BlackK
  15,  16,   3, -17,   4, -21,   9,  13,
  41,  14,  -4,  -1,  -1,  -8,   8,  23,
  19,   5, -27, -19, -19, -28,  -6,  13,
  21,  -2, -15,  -4,  -3, -31,   1,   7,
  19,   2, -19,  -9, -20, -23, -27,   6,
  19,  -8, -34, -18,  -1, -25, -17,  10,
  45,  10, -30, -22,   3, -27,   1,  -6,
  74,   8,  41,  -7,  18, -32, -25,  49,
};

}  // namespace

int32_t early_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kEarlyPieceMap[cp * 64 + sq];
}

int32_t late_piece_map(ColoredPiece cp, Square sq) {
	assert(cp >= 0);
	assert(cp < 13);
	assert(sq >= 0);
	assert(sq < 64);
    return kLatePieceMap[cp * 64 + sq];
}

}  // namespace ChessEngine